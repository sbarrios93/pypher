make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Sat Aug  6 12:30:09 2022

# Variables

# automatic
 
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `main.mk', line 31)
GOLANG_VERSION = 1.16
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
NVM_INC = /Users/seba/.nvm/versions/node/v18.6.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
CPPFLAGS = -I/opt/homebrew/opt/lapack/include -I/opt/homebrew/opt/openblas/include 
# makefile (from `main.mk', line 28)
GOTESTSUM_VERSION = 1.6.4
# makefile (from `main.mk', line 29)
GOLANGCI_VERSION = 1.41.1
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/seba/go/src/github.com/sbarrios93/pypher
# makefile
SHELL = /bin/sh
# makefile (from `main.mk', line 16)
BUILD_DATE = $(shell date "$(DATE_FMT)")
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# environment
core = /Users/seba/.core
# environment
CFLAGS = -falign-functions=8 
# environment
ml = /Users/seba/Dropbox/ML/
# environment
STARSHIP_SESSION_KEY = 1240124103225018
# environment
scripts = /Users/seba/.core/scripts
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from `main.mk', line 10)
VERSION = $(shell git describe --tags --exact-match 2>/dev/null || git symbolic-ref -q --short HEAD)
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# environment
icloud = /Users/seba/Library/Mobile Documents/com~apple~CloudDocs
# environment
VSCODE_CWD = /Users/seba/go/src/github.com/sbarrios93/pypher
# environment
GOPROXY = https://proxy.golang.org,direct
# makefile (from `main.mk', line 6)
PATH := /Users/seba/go/src/github.com/sbarrios93/pypher/bin:/Users/seba/go/bin:/Users/seba/.local/bin:/Users/seba/.core/poetry/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/opt/homebrew/bin:/Users/seba/.nvm/versions/node/v18.6.0/bin:/opt/homebrew/Cellar/pyenv-virtualenv/1.1.5/shims:/Users/seba/.pyenv/shims:/Users/seba/.pyenv/bin:/Users/seba/.pyenv/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/Users/seba/.cargo/bin:/Users/seba/.fig/bin:/Users/seba/.local/bin:/Users/seba/.core/poetry/bin
# environment
notes = /Users/seba/notes
# makefile (from `main.mk', line 19)
CGO_ENABLED = 0
# environment
VIRTUAL_ENV = /Users/seba/.pyenv/versions/3.9.10/envs/base
# makefile (from `main.mk', line 1)
MAKEFILE_LIST :=  Makefile main.mk
# environment
GOPATH = /Users/seba/go
# environment
NVM_BIN = /Users/seba/.nvm/versions/node/v18.6.0/bin
# environment
ZSH_CUSTOM = /Users/seba/.core/zsh
# makefile (from `Makefile', line 4)
OPENAPI_DESCRIPTOR_DIR = api/openapi
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
PYENV_ROOT = /Users/seba/.pyenv
# makefile (from `main.mk', line 18)
LDFLAGS = -L/opt/homebrew/opt/openblas/lib -L/opt/homebrew/opt/lapack/lib  -X main.version=${VERSION} -X main.commitHash=${COMMIT_HASH} -X main.buildDate=${BUILD_DATE}
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.6wjj3SkeyO/Listeners
# automatic
%F = $(notdir $%)
# environment
GOBIN = /Users/seba/go/bin
# environment
TTY = /dev/ttys002
# environment
HDF5_DIR = /opt/homebrew/opt/hdf5
# environment
FIG_PID = 11255
# environment
PWD = /Users/seba/go/src/github.com/sbarrios93/pypher
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /Users/seba/.nvm/versions/node/v18.6.0/share/man:/opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/seba/go/pkg/mod
# environment
PYENV_SHELL = zsh
# environment
HOME = /Users/seba
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /Users/seba/Library/Application Support/Code/CachedData/da76f93349a72022ca4670c1b84860304616aaa2
# environment
LOGNAME = sebastianbarrios
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# makefile (from `main.mk', line 140)
TEST_PKGS = ./...
# environment
LC_TERMINAL = iTerm2
# environment
custompaths = /Users/seba/.core/zsh/_paths.zsh
# environment
SHLVL = 3
# environment
FIG_TERM = 1
# makefile (from `main.mk', line 9)
BUILD_DIR = build
# default
MAKE_VERSION := 3.81
# environment
USER = sebastianbarrios
# environment
FIG_TERM_VERSION = 4.4.2
# environment
OPENBLAS = /opt/homebrew/opt/openblas
# default
MAKECMDGOALS := all
# environment
TERM_SESSION_ID = w0t0p0:425D7E3E-F62B-41BF-B16F-C6F846E3069D
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
FIG_INTEGRATION_VERSION = 8
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# environment
TERM_PROGRAM = iTerm.app
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/l3/3mdhq_2j2270k0r4rrjr0kn40000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `main.mk', line 5)
OS = $(shell uname | tr A-Z a-z)
# environment
VSCODE_IPC_HOOK = /Users/seba/Library/Application Support/Code/1.70.0-main.sock
# environment
MallocNanoZone = 0
# environment
mba = /Users/seba/Dropbox/MBA/
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 3.4.16
# environment
NVM_DIR = /Users/seba/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.19292989.19292995.193DB456-A7E8-419A-8262-12A2A533051E
# environment
LC_TERMINAL_VERSION = 3.4.16
# environment
 
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
drive = /Users/seba/Dropbox
# environment
MACPREFS_BACKUP_DIR = /Users/seba/.core/macprefs
# automatic
+F = $(notdir $+)
# environment
ITERM_SESSION_ID = w0t0p0:425D7E3E-F62B-41BF-B16F-C6F846E3069D
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
COLORFGBG = 15;0
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# makefile (from `main.mk', line 11)
COMMIT_HASH = $(shell git rev-parse --short HEAD 2>/dev/null)
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
ITERM_PROFILE = Default
# environment
EDITOR = nvim
# environment
LC_ALL = C
# environment
PYENV_VIRTUALENV_DISABLE_PROMPT = 1
# environment
site = /Users/seba/sebabarrios.com/
# makefile (from `Makefile', line 7)
MGA_VERSION = 0.2.0
# environment
PYENV_VIRTUAL_ENV = /Users/seba/.pyenv/versions/3.9.10/envs/base
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
PYENV_VIRTUALENV_INIT = 1
# environment
MAKELEVEL := 0
# makefile (from `main.mk', line 211)
.DEFAULT_GOAL := help
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 24081
# environment
STARSHIP_CONFIG = /Users/seba/.core/starship.toml
# environment
STARSHIP_SHELL = zsh
# makefile (from `main.mk', line 12)
DATE_FMT = +%FT%T%z
# variable set hash-table stats:
# Load=126/1024=12%, Rehash=0, Collisions=18/197=9%

# Pattern-specific Variable Values

release-% :
# makefile (from `main.mk', line 164)
# TAG_PREFIX := v

# 1 pattern-specific variable values
# Directories

# . (device 16777232, inode 19675149): 30 files, no impossibilities.
# cmd (device 16777232, inode 19675236): 4 files, no impossibilities.

# 34 files, no impossibilities in 2 directories.

# Implicit Rules

run-%: build-%
#  commands to execute (from `main.mk', line 43):
	${BUILD_DIR}/$*
	

build-%: build-deps pre-build

build-%: goversion
#  commands to execute (from `main.mk', line 73):
	@mkdir -p ${BUILD_DIR}
	go build ${GOARGS} -trimpath -tags "${GOTAGS}" -ldflags "${LDFLAGS}" -o ${BUILD_DIR}/$* ./cmd/$*
	@${MAKE} post-build
	

release-%:
#  commands to execute (from `main.mk', line 167):
	@sed -e "s/^## \[Unreleased\]$$/## [Unreleased]\\"$$'\n'"\\"$$'\n'"\\"$$'\n'"## [$*] - $$(date +%Y-%m-%d)/g; s|^\[Unreleased\]: \(.*\/compare\/\)\(.*\)...HEAD$$|[Unreleased]: \1${TAG_PREFIX}$*...HEAD\\"$$'\n'"[$*]: \1\2...${TAG_PREFIX}$*|g" CHANGELOG.md > CHANGELOG.md.new
	@mv CHANGELOG.md.new CHANGELOG.md
	@echo "Version updated to $*!"
	@echo
	@echo "Review the changes made by this script then execute the following:"
	@echo
	@echo "git add CHANGELOG.md && git commit -m 'Prepare release $*' && git tag -m 'Release $*' ${TAG_PREFIX}$*"
	@echo
	@echo "Finally, push the changes:"
	@echo
	@echo "git push; git push origin ${TAG_PREFIX}$*"
	

var-%:
#  commands to execute (from `main.mk', line 216):
	@echo $($*)
	

varexport-%:
#  commands to execute (from `main.mk', line 217):
	@echo $*=$($*)
	

# 6 implicit rules, 0 (0.0%) terminal.

# Files

run-%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-release: build-release-deps pre-build-release
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 106):
	@${MAKE} LDFLAGS="-w ${LDFLAGS}" GOARGS="${GOARGS} -trimpath" BUILD_DIR="${BUILD_DIR}/release" build
	@${MAKE} post-build-release
	

stop:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 30):
	docker-compose stop
	

build-debug: build-debug-deps pre-build-debug
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 126):
	@${MAKE} GOARGS="${GOARGS} -gcflags \"all=-N -l\"" BUILD_DIR="${BUILD_DIR}/debug" build
	@${MAKE} post-build-debug
	

minor:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 200):
	@${MAKE} release-$(shell (git describe --abbrev=0 --tags 2> /dev/null || echo "0.0.0") | sed 's/^v//' | awk -F'[ .]' '{print $$1"."$$2+1".0"}')
	

bin/gotestsum-1.6.4:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `main.mk', line 137):
	@mkdir -p bin
	curl -L https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_${OS}_amd64.tar.gz | tar -zOxf - gotestsum > ./bin/gotestsum-${GOTESTSUM_VERSION} && chmod +x ./bin/gotestsum-${GOTESTSUM_VERSION}
	

clear:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 35):
	rm -rf bin/
	

build-debug-deps: build-deps
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 113):
	@:
	

post-build-debug:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 121):
	@:
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: clear clean run-% run goversion build-deps pre-build post-build build-% build build-release-deps pre-build-release post-build-release build-release build-debug-deps pre-build-debug post-build-debug build-debug check test lint fix patch minor major list help up down reset start stop generate
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/mga-0.2.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 42):
	@mkdir -p bin
	curl -sfL https://git.io/mgatool | bash -s v${MGA_VERSION}
	@mv bin/mga $@
	

build-deps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 56):
	@:
	

pre-build-release:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 97):
	@:
	

post-build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 64):
	@:
	

bin/entc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 36):
	@mkdir -p bin
	go build -o bin/entc github.com/facebook/ent/cmd/entc
	

up: start config.toml
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-08-06 12:07:06
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

start: docker-compose.override.yml
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 25):
 
	@ if [ docker-compose.override.yml -ot docker-compose.override.yml.dist ]; then diff -u docker-compose.override.yml docker-compose.override.yml.dist || (echo "!!! The distributed docker-compose.override.yml example changed. Please update your file accordingly (or at least touch it). !!!" && false); fi
	docker-compose up -d
	

test: bin/gotestsum
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `main.mk', line 143)
# SHELL = /bin/bash
# makefile (from `main.mk', line 142)
# TEST_FORMAT = short
# makefile (from `main.mk', line 144)
# CGO_ENABLED = 1
# variable set hash-table stats:
# Load=3/32=9%, Rehash=0, Collisions=0/4=0%
#  commands to execute (from `main.mk', line 146):
	@mkdir -p ${BUILD_DIR}
	bin/gotestsum --no-summary=skipped --junitfile ${BUILD_DIR}/coverage.xml --format ${TEST_FORMAT} -- -race -coverprofile=${BUILD_DIR}/coverage.txt -covermode=atomic $(filter-out -v,${GOARGS}) $(if ${TEST_PKGS},${TEST_PKGS},./...)
	

build: goversion build-deps pre-build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 85):
	@mkdir -p ${BUILD_DIR}
	go build ${GOARGS} -trimpath -tags "${GOTAGS}" -ldflags "${LDFLAGS}" -o ${BUILD_DIR}/ ./cmd/...
	@${MAKE} post-build
	

fix: bin/golangci-lint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 162):
	bin/golangci-lint run --fix
	

bin/gotestsum: bin/gotestsum-1.6.4
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `main.mk', line 135):
	@ln -sf gotestsum-${GOTESTSUM_VERSION} bin/gotestsum
	

pre-build-debug:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 117):
	@:
	

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 213):
	@grep -h -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	

# Not a target:
run-pypher:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

patch:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 196):
	@${MAKE} release-$(shell (git describe --abbrev=0 --tags 2> /dev/null || echo "0.0.0") | sed 's/^v//' | awk -F'[ .]' '{print $$1"."$$2"."$$3+1}')
	

generate: bin/mga bin/entc
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 48):
	go generate -x ./...
	mga generate kit endpoint ./internal/app/mga/todo/...
	mga generate event handler --output subpkg:suffix=gen ./internal/app/mga/todo/...
	mga generate event dispatcher --output subpkg:suffix=gen ./internal/app/mga/todo/...
	entc generate ./internal/app/mga/todo/todoadapter/ent/schema
	

goversion:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 51):
	@printf "${GOLANG_VERSION}\n$$(go version | awk '{sub(/^go/, "", $$3);print $$3}')" | sort -t '.' -k 1,1 -k 2,2 -k 3,3 -g | head -1 | grep -q -E "^${GOLANG_VERSION}$$" || (printf "Required Go version is ${GOLANG_VERSION}\nInstalled: `go version`" && exit 1)
	

pre-build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 60):
	@:
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reset: down up
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

run: run-pypher run-todocli
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 39):
	rm -rf ${BUILD_DIR}/
	

build-%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

list:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 208):
	@${MAKE} -pRrn : -f $(MAKEFILE_LIST) 2>/dev/null | awk -v RS= -F: '/^# File/,/^# Finished Make data base/ {if ($$1 !~ "^[#.]") {print $$1}}' | egrep -v -e '^[^[:alnum:]]' -e '^$@$$' | sort
	

major:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 204):
	@${MAKE} release-$(shell (git describe --abbrev=0 --tags 2> /dev/null || echo "0.0.0") | sed 's/^v//' | awk -F'[ .]' '{print $$1+1".0.0"}')
	

main.mk:
#  Implicit rule search has not been done.
#  Last modified 2022-08-06 12:30:09
#  File has been updated.
#  Successfully updated.
#  commands to execute (from `main.mk', line 221):
	curl https://raw.githubusercontent.com/sagikazarmark/makefiles/master/go-app/main.mk > main.mk
	

config.toml:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 33):
	sed 's/production/development/g; s/debug = false/debug = true/g; s/shutdownTimeout = "15s"/shutdownTimeout = "0s"/g; s/format = "json"/format = "logfmt"/g; s/level = "info"/level = "debug"/g; s/addr = ":10000"/addr = "127.0.0.1:10000"/g; s/httpAddr = ":8000"/httpAddr = "127.0.0.1:8000"/g; s/grpcAddr = ":8001"/grpcAddr = "127.0.0.1:8001"/g' config.toml.dist > config.toml
	

build-release-deps: build-deps
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 93):
	@:
	

lint: bin/golangci-lint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 158):
	bin/golangci-lint run
	

post-build-release:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `main.mk', line 101):
	@:
	

docker-compose.override.yml:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 21):
	cp docker-compose.override.yml.dist docker-compose.override.yml
	

check: test lint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

bin/golangci-lint-1.41.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `main.mk', line 152):
	@mkdir -p bin
	curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | BINARY=golangci-lint bash -s -- v${GOLANGCI_VERSION}
	@mv bin/golangci-lint $@
	

bin/mga: bin/mga-0.2.0
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 40):
 
	@ln -sf mga-${MGA_VERSION} bin/mga
	

# Not a target:
run-todocli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/golangci-lint: bin/golangci-lint-1.41.1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `main.mk', line 150):
	@ln -sf golangci-lint-${GOLANGCI_VERSION} bin/golangci-lint
	

down: clear
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 14):
	docker-compose down --volumes --remove-orphans --rmi local
	rm -rf var/docker/volumes/*
	

# files hash-table stats:
# Load=50/1024=5%, Rehash=0, Collisions=3/166=2%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 2
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4079 / max = 4079 / min = 4079 / avg = 4079

# Finished Make data base on Sat Aug  6 12:30:09 2022

 
